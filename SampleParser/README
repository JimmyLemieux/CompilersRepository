Authors: Mustafa Al-Obaidi and James Lemieux

A JFlex+Cup implementation for the CM programming language.
Note: Some of the code have been taken from Professor Fei Song.

To Build the code:

In order to build the parser type make in the current directory.
This will generate an executable program called "CM".


To test source code like "1.cm", type:

    "java -cp /usr/share/java/cup.jar:. CM 1.cm"

To build the Scanner alone type "make Lexer.java" and to test the scanner only type:
    "java -classpath /usr/share/java/cup.jar:. Scanner < 1.cm"

In order build the Parser alone type "make parser.java"  and to display the Syntax Tree type:

    "java -classpath /usr/share/java/cup.jar:. CM 1.cm -a"

Test Files:
Some test files are provided with the submission which are 1.cm, 2.cm, 3.cm, 4.cm and 5.cm. Each test file covers different aspect of the program. Also, there are two additional files that can be tested which are fac.cm and gcd.cm

in order to test the files you can type this command:
"make test n=[1..5]" where n is the file number, for example if you want to run 2.cm you can type "make test n=2".

Limitations: While many cases are covered in the Parser, there might be some errors that are not caught by our Parser, and this could be improved in the futute.